@startuml

class notificationsystem.Application {
	{method}  {static} +main ( paramString;1 : [Ljava.lang.String; ) : void
}


class notificationsystem.configuration.AppConfig {
	{method} +backendURL () : String
	{method} +restTemplate () : org.springframework.web.client.RestTemplate
}


class notificationsystem.configuration.SecurityConfig {
	{method} +configure ( paramAuthenticationManagerBuilder1 : org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder ) : void
	{method} +configure ( paramHttpSecurity1 : org.springframework.security.config.annotation.web.builders.HttpSecurity ) : void
	{method} ~corsConfigurationSource () : org.springframework.web.cors.CorsConfigurationSource
	{method} +getPasswordEncoder () : org.springframework.security.crypto.password.PasswordEncoder
}


class notificationsystem.controller.CheckerUtil {
	{field} {static} -INACTIVE_DAYS_THRESHOLD : int
	{field} {static} -LOG_ALERT : String
	{field} {static} -LOG_ERROR : String
	{field} {static} -LOG_REPORT : String
	{field} {static} -SENSOR_ACTIVE : int
	{field} {static} -SENSOR_INACTIVE : int
	{field} -backendUrl : String
	{field} -checkActiveUrl : String
	{field} {static} -log : org.apache.commons.logging.Log
	{field} -restTemplate : org.springframework.web.client.RestTemplate
	{field} -sensorActiveDict : java.util.Map
	{method} +checkForReports () : void
	{method} +checkForSensorFailure () : void
}


class notificationsystem.controller.Controller {
	{field} {static} -CONSTRUCTOR_ERROR : String
	{field} {static} -SYSTEMLOGIN_ID : long
	{field} -backendUrl : String
	{field} -restTemplate : org.springframework.web.client.RestTemplate
	{method} +getConfirmCode ( paramString1 : String ) : String
	{method} +getSubscriptions ( paramString1 : String ) : java.util.List
	{method} +postConstruct () : void
	{method} +postSubscription ( paramString1 : String , paramString2 : String , paramlong3 : long , paramboolean4 : boolean ) : void
	{method} +postUnsubscribe ( paramString1 : String , paramString2 : String ) : void
	{method} +sendAlert ( paramString1 : String ) : void
	{method} +sendReport ( paramString1 : String , paramString2 : String ) : void
}


class notificationsystem.controller.MailSender {
	{field} {static} -SEND_STATE_ERROR : String
	{field} -session : javax.mail.Session
	{method} -login ( paramString1 : String , paramString2 : String ) : void
	{method} +send ( paramEMail1 : notificationsystem.view.EMail ) : void
}


interface notificationsystem.model.DAO {
	{method}  {abstract} +get ( paramObject1 : Object ) : java.util.Optional
	{method}  {abstract} +getAll () : java.util.List
}


class notificationsystem.model.ObservationStats {
	{field} -avg : double
	{field} -med : double
	{field} -min : double
	{field} -obsId : String
	{field} -obsName : String
	{field} -stdv : double
}


class notificationsystem.model.Sensor {
	{field} {static} -COORDINATES_IN_LOCATION : int
	{field} {static} -COORDINATES_KEY : String
	{field} +activeRate : double
	{field} ~description : String
	{field} +id : String
	{field} ~location : String
	{field} ~name : String
	{field} ~properties : String
	{field} +stats : java.util.LinkedList
}


class notificationsystem.model.SensorDAO {
	{field} {static} -DEFAULT_ACTIVE_RATE : int
	{field} {static} -ERROR_GET : String
	{field} {static} -FIRST_ACTIVE_RATE : int
	{field} {static} -KEY_AVG : String
	{field} {static} -KEY_ID : String
	{field} {static} -KEY_MED : String
	{field} {static} -KEY_MIN : String
	{field} {static} -KEY_NAME : String
	{field} {static} -KEY_STDV : String
	{field} -getActiveRateApi : String
	{field} -getAllObsApi : String
	{field} -getAllSensorsApi : String
	{field} -getStatsApi : String
	{field} -getThingApi : String
	{field} -restTemplate : org.springframework.web.client.RestTemplate
	{method} +get ( paramObject1 : Object ) : java.util.Optional
	{method} +get ( paramString1 : String ) : notificationsystem.model.Sensor
	{method} +get ( paramSensor1 : notificationsystem.model.Sensor ) : java.util.Optional
	{method} +getAll () : java.util.List
	{method} +setStats ( paramSensor1 : notificationsystem.model.Sensor , paramLocalDate2 : java.time.LocalDate ) : void
}


class notificationsystem.model.Subscription {
	{field} {static} -ALLOCATION_SIZE : int
	{field} -id : long
	{field} -reportInterval : long
	{field} -sensorId : String
	{field} +subTime : java.time.LocalDate
	{field} -subscriberAddress : String
	{field} -toggleAlert : boolean
}


class notificationsystem.model.SubscriptionDAO {
	{method} +delete ( paramSubscription1 : notificationsystem.model.Subscription ) : void
	{method} +get ( paramObject1 : Object ) : java.util.Optional
	{method} +get ( paramSubscription1 : notificationsystem.model.Subscription ) : java.util.Optional
	{method} +get ( paramString1 : String , paramString2 : String ) : notificationsystem.model.Subscription
	{method} +getAll () : java.util.List
	{method} +getAllSensors ( paramString1 : String ) : java.util.List
	{method} +getAllSubscribers ( paramString1 : String ) : java.util.List
	{method} +save ( paramSubscription1 : notificationsystem.model.Subscription ) : void
}


interface notificationsystem.model.SubscriptionRepository {
}


class notificationsystem.model.SystemLogin {
	{field} -id : long
	{field} -password : String
	{field} -username : String
}


class notificationsystem.model.SystemLoginDAO {
	{method} +getLogin ( paramLong1 : Long ) : java.util.Optional
}


interface notificationsystem.model.SystemLoginRepository {
}


class notificationsystem.view.Alert {
}


class notificationsystem.view.ConfirmationMail {
	{field} {static} -CODE_LENGTH : int
	{field} {static} -CODE_LETTERS : boolean
	{field} {static} -CODE_NUMBERS : boolean
	{field} -confirmCode : String
	{method} -generateConfirmCode () : String
}


abstract class notificationsystem.view.EMail {
	{field} +message : String
	{field} -receiverMail : String
	{field} -senderMail : String
	{field} -senderName : String
	{field} -subject : String
	{method} +getReceiverMails () : String
}


class notificationsystem.view.MailBuilder {
	{field} {static} -MAIL_SIGNING : String
	{field} {static} -SUBJECT_ALERT : String
	{field} {static} -SUBJECT_CONFIRM : String
	{method} +buildAlert ( paramString1 : String , paramSensor2 : notificationsystem.model.Sensor ) : notificationsystem.view.Alert
	{method} +buildConfirmationMail ( paramString1 : String ) : notificationsystem.view.ConfirmationMail
	{method} +buildReport ( paramString1 : String , paramSensor2 : notificationsystem.model.Sensor ) : notificationsystem.view.Report
}


class notificationsystem.view.Report {
}




notificationsystem.controller.CheckerUtil -->  notificationsystem.controller.Controller : controller
notificationsystem.controller.CheckerUtil -->  notificationsystem.model.SensorDAO : sensorDAO
notificationsystem.controller.CheckerUtil -->  notificationsystem.model.SubscriptionDAO : subscriptionDAO
notificationsystem.controller.Controller -->  notificationsystem.controller.MailSender : mailSender
notificationsystem.controller.Controller -->  notificationsystem.model.SensorDAO : sensorDAO
notificationsystem.controller.Controller -->  notificationsystem.model.SubscriptionDAO : subscriptionDAO
notificationsystem.controller.Controller -->  notificationsystem.view.MailBuilder : mailBuilder
notificationsystem.model.SensorDAO ..|>  notificationsystem.model.DAO
notificationsystem.model.SubscriptionDAO -->  notificationsystem.model.SubscriptionRepository : subscriptionRepository
notificationsystem.model.SubscriptionDAO ..|>  notificationsystem.model.DAO
notificationsystem.model.SystemLoginDAO -->  notificationsystem.model.SystemLoginRepository : systemLoginRepository
notificationsystem.view.Alert --|>  notificationsystem.view.EMail
notificationsystem.view.ConfirmationMail --|>  notificationsystem.view.EMail
notificationsystem.view.Report --|>  notificationsystem.view.EMail


@enduml